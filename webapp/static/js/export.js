/**
 * Export Manager for English Text Analyzer
 * Handles exporting analysis results in various formats
 */

class ExportManager {
    constructor() {
        this.init();
    }
    
    init() {
        // Initialize export functionality
        console.log('Export Manager initialized');
    }
    
    /**
     * Export results as HTML file
     */
    exportAsHTML() {
        const resultsContainer = document.getElementById('analysis-results');
        if (!resultsContainer) {
            alert('No analysis results to export');
            return;
        }
        
        const htmlContent = this.generateHTMLReport();
        this.downloadFile(htmlContent, 'text-analysis-report.html', 'text/html');
    }
    
    /**
     * Export results as PDF file
     */
    exportAsPDF() {
        const resultsContainer = document.getElementById('analysis-results');
        if (!resultsContainer) {
            alert('No analysis results to export');
            return;
        }
        
        // For now, we'll create a print-optimized HTML and let the user print to PDF
        // In a future version, we could integrate jsPDF for direct PDF generation
        this.openPrintDialog();
    }
    
    /**
     * Generate complete HTML report
     */
    generateHTMLReport() {
        const resultsContainer = document.getElementById('analysis-results');
        const textInput = document.getElementById('text-input');
        
        const originalText = textInput ? textInput.value : '';
        const analysisHTML = resultsContainer ? resultsContainer.innerHTML : '';
        
        return `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>English Text Analysis Report</title>
    <style>
        ${this.getReportCSS()}
    </style>
</head>
<body>
    <div class="report-container">
        <header class="report-header">
            <h1>English Text Analysis Report</h1>
            <div class="report-meta">
                <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>
                <p><strong>Tool:</strong> English Text Analyzer</p>
            </div>
        </header>
        
        <section class="original-text-section">
            <h2>Original Text</h2>
            <div class="original-text">
                ${this.escapeHTML(originalText)}
            </div>
        </section>
        
        <section class="analysis-section">
            <h2>Analysis Results</h2>
            ${analysisHTML}
        </section>
        
        <footer class="report-footer">
            <p>Generated by English Text Analyzer - Educational Tool</p>
            <p>For educational and research purposes</p>
        </footer>
    </div>
</body>
</html>`;
    }
    
    /**
     * Get CSS styles for the report
     */
    getReportCSS() {
        return `
            body {
                font-family: 'Georgia', 'Times New Roman', serif;
                line-height: 1.6;
                color: #000000;
                background-color: #ffffff;
                margin: 0;
                padding: 20px;
            }
            
            .report-container {
                max-width: 800px;
                margin: 0 auto;
                background: white;
                padding: 40px;
                box-shadow: 0 0 10px rgba(0,0,0,0.1);
            }
            
            .report-header {
                text-align: center;
                border-bottom: 3px solid #000000;
                padding-bottom: 20px;
                margin-bottom: 30px;
            }
            
            .report-header h1 {
                font-size: 2.5rem;
                margin-bottom: 10px;
                font-weight: bold;
            }
            
            .report-meta {
                font-size: 0.9rem;
                color: #666666;
            }
            
            .original-text-section,
            .analysis-section {
                margin-bottom: 30px;
            }
            
            .original-text-section h2,
            .analysis-section h2 {
                font-size: 1.5rem;
                border-bottom: 2px solid #000000;
                padding-bottom: 5px;
                margin-bottom: 15px;
            }
            
            .original-text {
                background-color: #f8f8f8;
                padding: 20px;
                border: 2px solid #000000;
                border-radius: 5px;
                white-space: pre-wrap;
                font-size: 1rem;
                line-height: 1.5;
            }
            
            .analysis-section .analysis-section {
                border: 2px solid #000000;
                border-radius: 5px;
                padding: 20px;
                margin-bottom: 20px;
                background-color: #ffffff;
            }
            
            .analysis-section h3 {
                font-size: 1.3rem;
                margin-bottom: 15px;
                color: #000000;
                border-bottom: 1px solid #cccccc;
                padding-bottom: 5px;
            }
            
            .analysis-section p {
                margin-bottom: 10px;
            }
            
            .analysis-section strong {
                font-weight: bold;
            }
            
            .report-footer {
                text-align: center;
                border-top: 2px solid #000000;
                padding-top: 20px;
                margin-top: 40px;
                font-size: 0.9rem;
                color: #666666;
            }
            
            /* Print styles */
            @media print {
                body {
                    padding: 0;
                }
                
                .report-container {
                    box-shadow: none;
                    padding: 20px;
                }
                
                @page {
                    margin: 2cm;
                }
            }
        `;
    }
    
    /**
     * Escape HTML characters
     */
    escapeHTML(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
    
    /**
     * Download file with given content
     */
    downloadFile(content, filename, mimeType) {
        const blob = new Blob([content], { type: mimeType });
        const url = URL.createObjectURL(blob);
        
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        link.style.display = 'none';
        
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        // Clean up the URL object
        setTimeout(() => URL.revokeObjectURL(url), 100);
    }
    
    /**
     * Open print dialog for PDF export
     */
    openPrintDialog() {
        // Create a new window with print-optimized content
        const printWindow = window.open('', '_blank');
        const printContent = this.generatePrintHTML();
        
        printWindow.document.write(printContent);
        printWindow.document.close();
        
        // Wait for content to load, then print
        printWindow.onload = () => {
            setTimeout(() => {
                printWindow.print();
                printWindow.close();
            }, 250);
        };
    }
    
    /**
     * Generate print-optimized HTML
     */
    generatePrintHTML() {
        const resultsContainer = document.getElementById('analysis-results');
        const textInput = document.getElementById('text-input');
        
        const originalText = textInput ? textInput.value : '';
        const analysisHTML = resultsContainer ? resultsContainer.innerHTML : '';
        
        return `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>English Text Analysis Report - Print Version</title>
    <style>
        ${this.getPrintCSS()}
    </style>
</head>
<body>
    <div class="print-container">
        <header class="print-header">
            <h1>English Text Analysis Report</h1>
            <div class="print-meta">
                <span>Generated: ${new Date().toLocaleDateString()}</span>
                <span>Words: ${this.countWords(originalText)}</span>
                <span>Characters: ${originalText.length}</span>
            </div>
        </header>
        
        <section class="print-original-text">
            <h2>Original Text</h2>
            <div class="text-content">
                ${this.escapeHTML(originalText)}
            </div>
        </section>
        
        <section class="print-analysis">
            <h2>Analysis Results</h2>
            ${analysisHTML}
        </section>
        
        <footer class="print-footer">
            <p>English Text Analyzer - Educational Tool</p>
        </footer>
    </div>
</body>
</html>`;
    }
    
    /**
     * Get print-specific CSS
     */
    getPrintCSS() {
        return `
            @page {
                size: A4;
                margin: 15mm;
            }
            
            body {
                font-family: 'Georgia', 'Times New Roman', serif;
                font-size: 11pt;
                line-height: 1.3;
                color: #000000;
                background: white;
                margin: 0;
                padding: 0;
            }
            
            .print-container {
                width: 100%;
            }
            
            .print-header {
                text-align: center;
                border-bottom: 2pt solid #000000;
                padding-bottom: 8pt;
                margin-bottom: 12pt;
            }
            
            .print-header h1 {
                font-size: 18pt;
                font-weight: bold;
                margin: 0 0 6pt 0;
            }
            
            .print-meta {
                font-size: 9pt;
                color: #666666;
            }
            
            .print-meta span {
                margin-right: 15pt;
            }
            
            .print-original-text,
            .print-analysis {
                margin-bottom: 12pt;
            }
            
            .print-original-text h2,
            .print-analysis h2 {
                font-size: 14pt;
                font-weight: bold;
                border-bottom: 1pt solid #000000;
                padding-bottom: 3pt;
                margin-bottom: 8pt;
            }
            
            .text-content {
                background-color: #f8f8f8;
                padding: 8pt;
                border: 1pt solid #000000;
                font-size: 10pt;
                line-height: 1.4;
                white-space: pre-wrap;
            }
            
            .analysis-section {
                page-break-inside: avoid;
                margin-bottom: 10pt;
                border: 1pt solid #000000;
                padding: 6pt;
            }
            
            .analysis-section h3 {
                font-size: 12pt;
                font-weight: bold;
                margin: 0 0 6pt 0;
                border-bottom: 0.5pt solid #666666;
                padding-bottom: 2pt;
            }
            
            .analysis-section p {
                font-size: 10pt;
                margin-bottom: 4pt;
            }
            
            .print-footer {
                text-align: center;
                border-top: 1pt solid #000000;
                padding-top: 6pt;
                margin-top: 12pt;
                font-size: 8pt;
                color: #666666;
            }
            
            /* Ensure good contrast for printing */
            * {
                color: #000000 !important;
                background-color: transparent !important;
            }
            
            .text-content {
                background-color: #f0f0f0 !important;
            }
        `;
    }
    
    /**
     * Count words in text
     */
    countWords(text) {
        return text.trim() ? text.trim().split(/\s+/).length : 0;
    }
    
    /**
     * Export analysis data as JSON
     */
    exportAsJSON() {
        const resultsContainer = document.getElementById('analysis-results');
        const textInput = document.getElementById('text-input');
        
        if (!resultsContainer) {
            alert('No analysis results to export');
            return;
        }
        
        const originalText = textInput ? textInput.value : '';
        
        // Extract data from the DOM (this is a simplified version)
        const exportData = {
            metadata: {
                exportDate: new Date().toISOString(),
                tool: 'English Text Analyzer',
                version: '1.0'
            },
            originalText: originalText,
            textStats: {
                wordCount: this.countWords(originalText),
                charCount: originalText.length
            },
            analysisResults: {
                // This would be populated with actual analysis data
                // For now, we'll include the HTML content
                htmlContent: resultsContainer.innerHTML
            }
        };
        
        const jsonContent = JSON.stringify(exportData, null, 2);
        this.downloadFile(jsonContent, 'text-analysis-data.json', 'application/json');
    }
    
    /**
     * Copy results to clipboard
     */
    async copyToClipboard() {
        const resultsContainer = document.getElementById('analysis-results');
        if (!resultsContainer) {
            alert('No analysis results to copy');
            return;
        }
        
        try {
            // Create a simplified text version of the results
            const textContent = this.extractTextFromResults(resultsContainer);
            await navigator.clipboard.writeText(textContent);
            
            // Show success message
            this.showCopySuccess();
        } catch (error) {
            console.error('Failed to copy to clipboard:', error);
            alert('Failed to copy to clipboard');
        }
    }
    
    /**
     * Extract text content from results
     */
    extractTextFromResults(container) {
        let text = 'ENGLISH TEXT ANALYSIS REPORT\n';
        text += '=' .repeat(40) + '\n\n';
        text += `Generated: ${new Date().toLocaleString()}\n\n`;
        
        // Extract text from each analysis section
        const sections = container.querySelectorAll('.analysis-section');
        sections.forEach(section => {
            const title = section.querySelector('h3');
            if (title) {
                text += title.textContent.toUpperCase() + '\n';
                text += '-'.repeat(title.textContent.length) + '\n';
            }
            
            const content = section.querySelector('.vocabulary-content, .grammar-content, .structure-content, .content-content, .complexity-content');
            if (content) {
                const paragraphs = content.querySelectorAll('p');
                paragraphs.forEach(p => {
                    text += p.textContent + '\n';
                });
            }
            
            text += '\n';
        });
        
        return text;
    }
    
    /**
     * Show copy success message
     */
    showCopySuccess() {
        // Create temporary success message
        const message = document.createElement('div');
        message.textContent = 'Results copied to clipboard!';
        message.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #2E7D32;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 1000;
            font-weight: bold;
        `;
        
        document.body.appendChild(message);
        
        setTimeout(() => {
            document.body.removeChild(message);
        }, 3000);
    }
}